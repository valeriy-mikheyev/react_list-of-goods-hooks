{"version":3,"sources":["components/GoodList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","goodsFromServer","SortType","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","classNames","ReactDOM","render","document","getElementById"],"mappings":"uPAMaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,oBACE,UAAQ,OADV,SAIGA,GAFIA,EAHE,KAF2B,ECA7BC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGGC,E,SAAAA,G,OAAAA,I,eAAAA,I,uBAAAA,I,mBAAAA,C,EAAAA,G,IAuCE,IAAMC,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASF,EAASK,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBMX,EAhDD,SACLA,EADK,GAGJ,IADCU,EACF,EADEA,SAAUH,EACZ,EADYA,WAGNK,EAAY,YAAOZ,GAezB,OAXAY,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQL,GACN,KAAKN,EAASY,SACZ,OAAOF,EAAGG,cAAcF,GAC1B,KAAKX,EAASc,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OACxB,QACE,OAAO,EAEZ,IAEGZ,EACKK,EAAaQ,UAGfR,CACR,CAwBGS,CAAkBlB,EAAiB,CAAEO,WAAUH,eAEjD,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QArBe,WACrBb,EAAYP,EAASY,SACtB,EAoBOM,UAAWG,IACT,iBAAkB,CAChB,WAAYf,IAAaN,EAASY,WALxC,iCAYA,wBACEO,KAAK,SACLC,QArCa,WACnBb,EAAYP,EAASc,OACtB,EAoCOI,UAAWG,IACT,oBAAqB,CACnB,WAAYf,IAAaN,EAASc,SALxC,4BAYA,wBACEK,KAAK,SACLC,QAzCQ,WACdhB,GAAeD,EAChB,EAwCOe,UAAWG,IACT,oBAAqB,CACnB,YAAalB,IALnB,sBAYEG,IAAaN,EAASK,MAAQF,IAC9B,wBACEgB,KAAK,SACLD,UAAU,4BACVE,QAnDI,WACZb,EAAYP,EAASK,MACrBD,GAAc,EACf,EA6CO,sBASJ,6BACE,cAAC,EAAD,CAAWR,MAAOA,QAIzB,ECrID0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.5531a466.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goods: string[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map((good) => (\n      <li\n        data-cy=\"Good\"\n        key={good}\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodsList } from './components/GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n\n  visibleGoods.sort((g1, g2): number => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const reverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const goods\n  = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={sortByAlphabet}\n          className={classNames(\n            'button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={sortByLength}\n          className={classNames(\n            'button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={reverse}\n          className={classNames(\n            'button is-warning', {\n              'is-light': !isReversed,\n            },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <ul>\n        <GoodsList goods={goods} />\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}